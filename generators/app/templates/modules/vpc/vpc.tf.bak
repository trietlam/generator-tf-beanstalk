resource "aws_vpc" "default" {
    cidr_block = "${var.vpc_cidr}"
    enable_dns_hostnames = true
    tags {
        Name = "terraform-aws-vpc"
    }
}

resource "aws_internet_gateway" "default" {
    vpc_id = "${aws_vpc.default.id}"
}

/*
  NAT Instance
*/
resource "aws_security_group" "nat"{
    name = "vpc_nat"
    description = "Allow traffic to pass from the private subnet to the internet"
    ingress {
        from_port = 80
        to_port = 80
        protocol = "tcp"
        cidr_blocks = ["${var.private_subnet_cidr_b}"]
    }
    ingress {
        from_port = 443
        to_port = 443
        protocol = "tcp"
        cidr_blocks = ["${var.private_subnet_cidr_b}"]
    }
    ingress {
        from_port = 80
        to_port = 80
        protocol = "tcp"
        cidr_blocks = ["${var.private_subnet_cidr_a}"]
    }
    ingress {
        from_port = 443
        to_port = 443
        protocol = "tcp"
        cidr_blocks = ["${var.private_subnet_cidr_a}"]
    }
    ingress {
        from_port = 22
        to_port = 22
        protocol = "tcp"
        cidr_blocks = ["0.0.0.0/0"]
    }
    ingress {
        from_port = -1
        to_port = -1
        protocol = "icmp"
        cidr_blocks = ["0.0.0.0/0"]
    }

    egress {
        from_port = 80
        to_port = 80
        protocol = "tcp"
        cidr_blocks = ["0.0.0.0/0"]
    }
    egress {
        from_port = 443
        to_port = 443
        protocol = "tcp"
        cidr_blocks = ["0.0.0.0/0"]
    }
    egress {
        from_port = 22
        to_port = 22
        protocol = "tcp"
        cidr_blocks = ["${var.vpc_cidr}"]
    }
    egress {
        from_port = -1
        to_port = -1
        protocol = "icmp"
        cidr_blocks = ["0.0.0.0/0"]
    }

    vpc_id = "${aws_vpc.default.id}"

    tags {
        Name = "NATSG"
    }
}

resource "aws_instance" "nat" {
    ami = "${lookup(var.nat_amis, var.aws_region)}" # this is a special ami preconfigured to do NAT
    availability_zone = "${var.aws_region}a"
    instance_type = "t2.micro"
    key_name = "${var.aws_key_name}"
    vpc_security_group_ids = ["${aws_security_group.nat.id}"]
    subnet_id = "${aws_subnet.aws-subnet-2a-public.id}"
    associate_public_ip_address = true
    source_dest_check = false

    tags {
        Name = "VPC NAT"
    }
}

resource "aws_eip" "nat" {
    instance = "${aws_instance.nat.id}"
    vpc = true
}

/*
     Public Subnet A
*/
resource "aws_subnet" "aws-subnet-2a-public" {
    vpc_id = "${aws_vpc.default.id}"

    cidr_block = "${var.public_subnet_cidr_a}"
    availability_zone = "${var.aws_region}a"

    tags {
        Name = "Public Subnet A"
    }
}

resource "aws_route_table" "aws-2a-public-route-table" {
    vpc_id = "${aws_vpc.default.id}"

    route {
        cidr_block = "0.0.0.0/0"
        gateway_id = "${aws_internet_gateway.default.id}"
    }

    tags {
        Name = "Public Subnet A"
    }
}


/*
  Public Subnet aws_route_table_association
*/
resource "aws_route_table_association" "aws-rtb-assoc-2a-public" {
    subnet_id = "${aws_subnet.aws-subnet-2a-public.id}"
    route_table_id = "${aws_route_table.aws-2a-public-route-table.id}"
}


resource "aws_subnet" "aws-subnet-2b-public" {
    vpc_id = "${aws_vpc.default.id}"

    cidr_block = "${var.public_subnet_cidr_b}"
    availability_zone = "${var.aws_region}b"

    tags {
        Name = "Public Subnet B"
    }
}

resource "aws_route_table" "aws-2b-public-route-table" {
    vpc_id = "${aws_vpc.default.id}"

    route {
        cidr_block = "0.0.0.0/0"
        gateway_id = "${aws_internet_gateway.default.id}"
    }

    tags {
        Name = "Public Subnet B"
    }
}

resource "aws_route_table_association" "aws-rtb-assoc-2b-public" {
    subnet_id = "${aws_subnet.aws-subnet-2b-public.id}"
    route_table_id = "${aws_route_table.aws-2b-public-route-table.id}"
}

/*
  Private Subnet A
*/
resource "aws_subnet" "aws-sbunet-2a-private" {
    vpc_id = "${aws_vpc.default.id}"

    cidr_block = "${var.private_subnet_cidr_a}"
    availability_zone = "${var.aws_region}a"

    tags {
        Name = "Private Subnet A"
    }
}

resource "aws_route_table" "aws-2a-private-route-table" {
    vpc_id = "${aws_vpc.default.id}"

    route {
        cidr_block = "0.0.0.0/0"
        instance_id = "${aws_instance.nat.id}"
    }

    tags {
        Name = "Private Subnet A"
    }
}

resource "aws_route_table_association" "aws-rtb-assos-2a-private" {
    subnet_id = "${aws_subnet.aws-sbunet-2a-private.id}"
    route_table_id = "${aws_route_table.aws-2a-private-route-table.id}"
}


/*
  Private Subnet B
*/
resource "aws_subnet" "aws-sbunet-2b-private" {
    vpc_id = "${aws_vpc.default.id}"

    cidr_block = "${var.private_subnet_cidr_b}"
    availability_zone = "${var.aws_region}b"

    tags {
        Name = "Private Subnet B"
    }
}

resource "aws_route_table" "aws-2b-private-route-table" {
    vpc_id = "${aws_vpc.default.id}"

    route {
        cidr_block = "0.0.0.0/0"
        instance_id = "${aws_instance.nat.id}"
    }

    tags {
        Name = "Private Subnet B"
    }
}

resource "aws_route_table_association" "aws-rtb-assoc-2b-private" {
    subnet_id = "${aws_subnet.aws-sbunet-2b-private.id}"
    route_table_id = "${aws_route_table.aws-2b-private-route-table.id}"
}

resource "aws_db_subnet_group" "database-subnet" {
  name = "private-dbs-sumbet"
  subnet_ids = ["${aws_subnet.aws-sbunet-2a-private.id}", "${aws_subnet.aws-sbunet-2b-private.id}"]

  tags {
    Name = "Private DB subnet group"
  }
}

output "subnets" {
    value = [
      "${aws_subnet.aws-sbunet-2a-private.id}",
      "${aws_subnet.aws-sbunet-2b-private.id}",
      "${aws_subnet.aws-subnet-2a-public.id}",
      "${aws_subnet.aws-subnet-2b-public.id}"
    ]
}

output "database_subnet_group" {
  value = "${aws_db_subnet_group.database-subnet.id}"
}

output "default_security_group" {
    value = "${aws_vpc.default.default_security_group_id}"
}
